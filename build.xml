<?xml version="1.0" encoding="UTF-8"?>

<project basedir="." default="jar" name="jtestr">
  <description>
    	JtestR is a testing solution for testing Java code with Ruby
  </description>

  <!-- First try to load machine-specific properties. -->
  <property file="build.properties"/>
  
  <!-- And then load the defaults. It seems backwards to set defaults AFTER 
       setting local overrides, but that's how Ant works. -->
  <property file="default.build.properties"/>

  <path id="build.classpath">
    <fileset dir="${lib.dir}" includes="*.jar"/>
  </path>

  <patternset id="java.src.pattern">
    <include name="**/*.java"/>
    <exclude name="**/*Mojo.java"/>
  </patternset>

<!--
  <path id="emma.lib" >
    <pathelement location="emma.jar" />
    <pathelement location="emma_ant.jar" />
  </path>

  <taskdef resource="emma_ant.properties" classpathref="emma.lib" />
-->

  <target name="prepare" description="Creates the directories needed for building">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${classes.dir}"/>
<!--    <mkdir dir="build/coverage"/> -->
    <mkdir dir="${classes.test.dir}"/>
    <mkdir dir="${dist.dir}"/>
  </target>
  
  <target name="compile" depends="prepare" description="Compile the source files for the project.">
    <javac destdir="${classes.dir}" debug="true" source="${javac.version}" target="${javac.version}">
      <classpath refid="build.classpath"/>
      <src path="${src.java.dir}"/>
      <patternset refid="java.src.pattern"/>
    </javac>
    <javac destdir="${classes.test.dir}" debug="true" source="${javac.version}" target="${javac.version}">
      <classpath refid="build.classpath"/>
      <src path="${src.java.test.dir}"/>
      <patternset refid="java.src.pattern"/>
    </javac>
  </target>

  <target name="test" depends="compile" description="Runs all tests">
    <taskdef name="jtestr" classname="org.jtestr.ant.JtestRAntRunner">
      <classpath refid="build.classpath"/>
      <classpath path="${classes.dir}"/>
      <classpath path="${src.ruby.dir}"/>
    </taskdef>

    <jtestr port="20333"/>
<!--    <jtestr port="20333" logging="DEBUG" outputLevel="VERBOSE"/>-->
  </target>

  <target name="test-one" depends="compile" description="Runs all tests">
    <taskdef name="jtestr" classname="org.jtestr.ant.JtestRAntRunner">
      <classpath refid="build.classpath"/>
      <classpath path="${classes.dir}"/>
      <classpath path="${src.ruby.dir}"/>
    </taskdef>
    
    <jtestr port="20333" logging="DEBUG" outputLevel="VERBOSE" groups="Unit Spec"/>
  </target>

<!--
  <target name="test-coverage" depends="compile" description="Runs all tests">
    <emmajava libclasspathref="emma.lib" fullmetadata="yes" sourcepath="${src.dir}" classname="org.jtestr.JtestRRunner">
      <classpath refid="build.classpath"/>
      <classpath path="build/classes"/>
      <classpath path="${src.ruby.dir}"/>

      <filter includes="org.jtestr.*"/>
      
      <txt outfile="build/coverage/coverage.txt" />
      <xml outfile="build/coverage/coverage.xml" />
      <html outfile="build/coverage/coverage.html"  />
    </emmajava>
  </target>
-->

  <target name="smoke" depends="compile" description="Runs all tests">
    <taskdef name="jtestr" classname="org.jtestr.ant.JtestRAntRunner">
      <classpath refid="build.classpath"/>
      <classpath path="${classes.dir}"/>
      <classpath path="${src.ruby.dir}"/>
    </taskdef>

    <jtestr port="20333" groups="Stories"/>
  </target>

  <target name="test-server" depends="compile" description="Starts test server">
    <java classname="org.jtestr.BackgroundServer" fork="false" spawn="false">
      <classpath refid="build.classpath"/>
      <classpath path="${classes.dir}"/>
      <classpath path="${src.ruby.dir}"/>
      <arg line="20333 3"/>
    </java>
  </target>

  <target name="test-junit" depends="compile" description="Runs all tests">
    <junit haltonfailure="false" fork="yes">
      <jvmarg value="-Djtestr.junit.tests=test_tests/one_of_each"/>

      <classpath refid="build.classpath"/>
      <classpath path="${classes.dir}"/>
      <classpath path="${src.ruby.dir}"/>

      <formatter type="xml" usefile="false"/>

      <test name="org.jtestr.ant.JtestRSuite"/> 
    </junit>
  </target>

  <target name="jar" depends="test" description="Create the distribution file">
    <jar destfile="${dist.dir}/jtestr.jar" filesonly="false">
      <fileset dir="${classes.dir}">
        <include name="**/*.class"/>
        <include name="**/*.properties"/>
      </fileset>
      <fileset dir="${src.ruby.dir}">
        <include name="**/*.rb"/>
      </fileset>
      <zipfileset src="${lib.dir}/jruby-complete-r1c672b495cfd204421f4a7aed17f6135e730a3b2.jar"/>
      <zipfileset src="${lib.dir}/junit-4.7.jar"/>
      <zipfileset src="${lib.dir}/testng-5.9-jdk15.jar"/>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
      </manifest>
    </jar>
  </target>

  <target name="clean" description="Removes temporary build artifacts">
    <delete dir="${build.dir}"/>
    <delete dir="${dist.dir}"/>
  </target>
</project>
